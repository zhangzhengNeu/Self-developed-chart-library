import { ArtColumn, TableTransform } from '../interfaces';
export declare const treeMetaSymbol: unique symbol;
export interface TreeModeOptions {
    primaryKey: string;
    openKeys: string[];
    onChangeOpenKeys(nextKeys: string[], key: string, action: 'expand' | 'collapse'): void;
    indentSize?: number;
    isLeafNode?(node: any, nodeMeta: {
        depth: number;
        expanded: boolean;
        rowKey: string;
    }): boolean;
}
export declare function makeTreeModeTransform({ onChangeOpenKeys, openKeys, primaryKey, indentSize, isLeafNode, }: TreeModeOptions): TableTransform;
export declare function useTreeModeTransform({ isLeafNode, indentSize, primaryKey, defaultOpenKeys, }: Omit<TreeModeOptions, 'openKeys' | 'onChangeOpenKeys'> & {
    defaultOpenKeys?: string[];
}): import("../interfaces").Transform<{
    columns: ArtColumn[];
    dataSource: any[];
}>;
