export declare const Classes: {
    /** BaseTable 表格组件的外层包裹 div */
    artTableWrapper: string;
    /** BaseTable 主要内容 div；包含 3 个 left/main/right section */
    artTable: string;
    lockShadow: string;
    mainSection: string;
    leftSection: string;
    rightSection: string;
    tableInner: string;
    tableHeaderWrapper: string;
    tableHeader: string;
    tableBody: string;
    /** 表格行 */
    tableRow: string;
    /** 表头行 */
    tableHeaderRow: string;
    /** 单元格 */
    tableCell: string;
    /** 表头的单元格 */
    tableHeaderCell: string;
    virtualBlank: string;
    stickyScroll: string;
    stickyScrollItem: string;
    /** 空白表格的（唯一）单元格 */
    emptyTableCell: string;
    /** 数据为空时表格内容的外层 div */
    emptyWrapper: string;
    emptyImage: string;
    emptyTips: string;
    loadingWrapper: string;
    loadingIndicatorWrapper: string;
    loadingIndicator: string;
    loadingIndicatorIcon: string;
    loadingContentWrapper: string;
};
export declare const Z: {
    lock: number;
    scrollItem: number;
    header: number;
    virtual: number;
    tableInner: number;
    shadow: number;
};
export declare type BaseTableCSSVariables = Partial<{
    /** 表格的字体颜色 */
    '--color': string;
    /** 表格背景颜色 */
    '--bgcolor': string;
    /** 表头的字体颜色 */
    '--header-color': string;
    /** 表头的背景颜色 */
    '--header-bgcolor': string;
    /** 单元格的边框颜色 */
    '--border-color': string;
    /** 表格行高，注意该属性将被作为 CSS variable，不能使用数字作为简写 */
    '--row-height': string;
    /** 表格行 鼠标悬停时的背景色 */
    '--row-hover-color': string;
    /** 表格行高，注意该属性将被作为 CSS variable，不能使用数字作为简写 */
    '--header-row-height': string;
    /** 单元格边框，默认为 1px solid var(--border-color) */
    '--cell-border': string;
    /** 单元格上下边框，默认为 var(--cell-border) */
    '--cell-border-horizontal': string;
    /** 单元格左右边框，默认为 var(--cell-border) */
    '--cell-border-vertical': string;
    /** 表头单元格边框，默认为 1px solid var(--border-color) */
    '--header-cell-border': string;
    /** 表头单元格上下边框，默认为 var(--header-cell-border) */
    '--header-cell-border-horizontal': string;
    /** 表头单元格左右边框，默认为 var(--header-cell-border) */
    '--header-cell-border-vertical': string;
    /** 单元格边框 */
    '--cell-border-top': string;
    /** 单元格边框 */
    '--cell-border-bottom': string;
    /** 单元格边框 */
    '--cell-border-left': string;
    /** 单元格边框 */
    '--cell-border-right': string;
    /** 表头单元格边框 */
    '--header-cell-border-top': string;
    /** 表头单元格边框 */
    '--header-cell-border-bottom': string;
    /** 表头单元格边框 */
    '--header-cell-border-left': string;
    /** 表头单元格边框 */
    '--header-cell-border-right': string;
}>;
export declare const Styled: {
    ArtTableWrapper: import("styled-components").StyledComponent<"div", any, {}, never>;
    ArtTable: import("styled-components").StyledComponent<"div", any, {}, never>;
    MainSection: import("styled-components").StyledComponent<"div", any, {}, never>;
    LeftSection: import("styled-components").StyledComponent<"div", any, {}, never>;
    RightSection: import("styled-components").StyledComponent<"div", any, {}, never>;
    StickyScroll: import("styled-components").StyledComponent<"div", any, {}, never>;
    EmptyWrapper: import("styled-components").StyledComponent<"div", any, {}, never>;
    EmptyTableCell: import("styled-components").StyledComponent<"td", any, {}, never>;
};
