import { ComponentType, ReactNode } from 'react';
import { BaseTableProps } from '../../base-table';
import { CellProps } from '../../interfaces';
import { CrossTableLeftMetaColumn, LeftCrossTreeNode, TopCrossTreeNode } from './interfaces';
export declare const StyledBaseTableForCrossTable: ComponentType<BaseTableProps>;
export interface CrossTableProps extends Omit<BaseTableProps, 'dataSource' | 'columns' | 'primaryKey'> {
    leftTree: LeftCrossTreeNode[];
    topTree: TopCrossTreeNode[];
    leftTotalNode?: LeftCrossTreeNode;
    topTotalNode?: TopCrossTreeNode;
    leftMetaColumns?: CrossTableLeftMetaColumn[];
    getValue(leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number): any;
    render?(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number): ReactNode;
    getCellProps?(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number): CellProps;
}
declare function CrossTable({ leftTree, leftTotalNode, topTree, topTotalNode, getValue, getCellProps, leftMetaColumns, render, className, ...others }: CrossTableProps): JSX.Element;
declare namespace CrossTable {
    var defaultProps: {
        leftMetaColumns: CrossTableLeftMetaColumn[];
    };
}
export default CrossTable;
